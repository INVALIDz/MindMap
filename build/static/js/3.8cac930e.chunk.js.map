{"version":3,"sources":["components/Popup/subComponents/Export.js"],"names":["Export","_ref","handleClosePopup","_useContext","useContext","context","mindmap","state","title","global","clearNodeStatus","useMindmap","handleExportText","format","data","mindmapExporter","url","concat","encodeURIComponent","downloadFile","toLowerCase","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_common_styledComponents__WEBPACK_IMPORTED_MODULE_9__","className","list_wrapper","onClick","html2canvas","document","getElementById","refer","then","canvas","toDataURL","css","_templateObject"],"mappings":"8kBA2CeA,UAhCA,SAAAC,GAAwB,IAAtBC,EAAsBD,EAAtBC,iBAAsBC,EAC2BC,qBAAWC,KAAjDC,EADWH,EAC5BG,QAAUC,MAAkCC,EADhBL,EACDM,OAASF,MAAQC,MAC5CE,EAAmBC,cAAnBD,gBAUDE,EAAmB,SAAAC,GACrB,IAAMC,EAAOC,YAAgBT,EAASO,GAClCG,EAAG,mBAAAC,OAAsBC,mBAAmBJ,IAChDK,YAAaH,EAAD,GAAAC,OAAST,EAAT,KAAAS,OAAkBJ,EAAOO,iBAGzC,OAAQC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,yDACAH,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,GACXL,EAAAC,EAAAC,cAAA,MAAII,QAjBY,WACpBjB,IACAkB,IAAYC,SAASC,eAAeC,MAAmBC,KAAK,SAAAC,GACxD,IAAIjB,EAAMiB,EAAOC,UAAU,aAC3Bf,YAAaH,EAAD,GAAAC,OAAST,EAAT,aAakBa,EAAAC,EAAAC,cAAA,KAAGE,UAAW,sBAA5C,oCACAJ,EAAAC,EAAAC,cAAA,MAAII,QAAS,WAAQf,EAAiB,QAAUS,EAAAC,EAAAC,cAAA,KAAGE,UAAW,oBAA9D,2CACAJ,EAAAC,EAAAC,cAAA,MAAII,QAAS,WAAQf,EAAiB,QAAUS,EAAAC,EAAAC,cAAA,KAAGE,UAAW,sBAA9D,2BACAJ,EAAAC,EAAAC,cAAA,MAAII,QAAS,WAAQf,EAAiB,SAAWS,EAAAC,EAAAC,cAAA,KAAGE,UAAW,qBAA/D,6CAEJJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,UAAQI,QAASzB,GAAjB,mBAQZ,IAAMwB,EAAeS,YAAHC,IAiBWL","file":"static/js/3.8cac930e.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../../context';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport * as refer from '../../../statics/refer';\nimport html2canvas from 'html2canvas';\nimport {downloadFile} from '../../../methods/assistFunctions';\nimport mindmapExporter from '../../../methods/mindmapExporter';\nimport {Highlight, ButtonSet} from '../common/styledComponents';\n\n\nconst Export = ({handleClosePopup}) => {\n    const {mindmap: {state: mindmap}, global: {state: {title}}} = useContext(context);\n    const {clearNodeStatus} = useMindmap();\n\n    const handleExportPNG = () => {\n        clearNodeStatus(); // 防止选中状态时的工具条等也被导出到图像\n        html2canvas(document.getElementById(refer.MINDMAP_ID)).then(canvas => {\n            let url = canvas.toDataURL('image/png');\n            downloadFile(url, `${title}.png`);\n        });\n    };\n\n    const handleExportText = format => {\n        const data = mindmapExporter(mindmap, format);\n        let url = `data:text/plain,${encodeURIComponent(data)}`;\n        downloadFile(url, `${title}.${format.toLowerCase()}`);\n    };\n\n    return (<div>\n        <Highlight>请选择导出格式：</Highlight>\n        <ul className={list_wrapper}>\n            <li onClick={handleExportPNG}><i className={'zwicon-file-image'} />PNG 图片（.png）</li>\n            <li onClick={() => { handleExportText('KM'); }}><i className={'zwicon-file-pdf'} />百度脑图（.km）</li>\n            <li onClick={() => { handleExportText('MD'); }}><i className={'zwicon-file-table'} />Markdown（.md）</li>\n            <li onClick={() => { handleExportText('TXT'); }}><i className={'zwicon-file-font'} />文本文件（.txt）</li>\n        </ul>\n        <ButtonSet>\n            <button onClick={handleClosePopup}>完成</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default Export;\n\n// CSS\nconst list_wrapper = css`\npadding: 0;\nlist-style: none;\n\nli {\npadding: 5px 0 5px 5px;\nborder-left: 3px solid transparent;\nborder-bottom: 1px solid #dddddd;\nline-height: 30px;\ncursor: pointer;\n}\n\nli:last-of-type {\nborder-bottom: none;\n}\n\nli:hover {\nborder-left: 3px solid var(${refer.THEME_EX});\n}\n\nli i {\nmargin-right: 10px;\nfont-size: 30px;\n}\n`;"],"sourceRoot":""}